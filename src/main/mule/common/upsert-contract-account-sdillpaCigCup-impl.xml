<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:s4hana="http://www.mulesoft.org/schema/mule/s4hana"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/s4hana http://www.mulesoft.org/schema/mule/s4hana/current/mule-s4hana.xsd">
	<flow name="upsert-contract-account-sdiIlpaCigCup-implFlow" doc:id="ad627d33-669b-4703-84f6-d23af280558b" >
		<ee:transform doc:name="Transform Message" doc:id="987582cd-e576-4034-a5d4-775fb4a1c549" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="sdiIlpaCigCupRequest" ><![CDATA[%dw 2.0
output application/java
---
{
  "ContoContrattuale" : vars.contractAccount.ALIA_OLDKEY__c,
  ("Cup" : vars.contractAccount.ALIA_CUP__c) if (vars.contractAccount.ALIA_CUP__c != null),
  ("Cig" : vars.contractAccount.ALIA_CIG__c) if (vars.contractAccount.ALIA_CIG__c != null),
  ("DataInizioVal" : vars.contractAccount.ALIA_DataInizio_CIG__c as Date  {format:"yyyy-MM-dd"} as String {format:"yyyy-MM-dd"} ++ "T00:00:00") if (!isEmpty(vars.contractAccount.ALIA_DataInizio_CIG__c)),
  "DataFineVal" : if (vars.contractAccount.ALIA_DataFine_CIG__c == null) "9999-12-31T00:00:00" else (vars.contractAccount.ALIA_DataFine_CIG__c as Date  {format:"yyyy-MM-dd"} as String {format:"yyyy-MM-dd"} ++ "T00:00:00"),
  ("CodiceUnivoco" : vars.contractAccount.ALIA_SDI_IPA__c) if (vars.contractAccount.ALIA_SDI_IPA__c != null)
}]]></ee:set-variable>
			</ee:variables>
		
</ee:transform>
		<try doc:name="Try" doc:id="a7e4ff4c-9309-4f24-85ee-52e1560eab99" >
			<s4hana:get-entity service="ZER_CIGCUP_CODUNI_SRV" doc:name="Get entity by key" doc:id="a92b853a-f4ea-469e-b286-fb065d571df3" config-ref="SAP_S_4HANA_Config" entityType="ZContrContrSet" target="getSdiIlpaCigCupResponse">
			<s4hana:key><![CDATA[#[{"ContoContrattuale" : vars.sdiIlpaCigCupRequest.ContoContrattuale}]]]></s4hana:key>
		</s4hana:get-entity>
			<error-handler >
				<on-error-continue enableNotifications="false" logException="false" doc:name="On Error Continue" doc:id="f4f6b452-be47-4f8c-b032-e1f6db141830" type="S4HANA:INVALID_ENTITY" when='lower(error.description) contains "nessun dato estratto per la chiave indicata"'>
				<logger level="WARN" doc:name="Logger" doc:id="5e13ddd4-32c7-4e5f-b437-50637568aec6" message="SdiIlpaCigCup not found"/>
			</on-error-continue>
			<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="9ce7cdb4-d20e-46a3-9033-31fffc42eb9a" type="ANY">
				<logger level="ERROR" doc:name="Logger" doc:id="9717121e-78d1-432b-b0e9-a9ca476c839f" message="Error retrieving SdiIlpaCigCup"/>
			</on-error-propagate>
			</error-handler>
		</try>
		<choice doc:name="Choice" doc:id="8cd059b2-a8b7-4652-9b38-99d8ae9eb6b8" >
			<when expression="#[isEmpty(vars.getSdiIlpaCigCupResponse)]">
			<logger level="INFO" doc:name="Logger" doc:id="944499da-65e9-44a6-9711-18f7f1e5f88a" message='#[%dw 2.0&#10;output text/plain&#10;---&#10;"Creating sdiIpaCigCup using payload: " ++ write(vars.sdiIlpaCigCupRequest, "application/json")]'/>
		<s4hana:create-entity doc:name="Create entity" doc:id="7a52a250-7d41-4216-a1be-b6297a42ed7a" config-ref="SAP_S_4HANA_Config" service="ZER_CIGCUP_CODUNI_SRV" entityType="ZContrContrSet">
					<s4hana:entity ><![CDATA[#[vars.sdiIlpaCigCupRequest]]]></s4hana:entity>
				</s4hana:create-entity>
		<ee:transform doc:name="Create SdiIlpaCigCup - Response Transformation" doc:id="1a5f3856-db00-4b5d-87c3-68da2c66a469" >
			<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json

fun transformSdiIpaCigCup(contractSAP) = {
	"ALIA_OLDKEY__c" : contractSAP.ContoContrattuale,
	"ALIA_CUP__c" : contractSAP.Cup,
	"ALIA_CIG__c" : contractSAP.Cig,
	("ALIA_DataInizio_CIG__c" : contractSAP.DataInizioVal as Date {format: "yyyy-MM-dd"} as String {format: "yyyyMMdd"}) if ((!isEmpty(contractSAP.DataInizioVal)) and (contractSAP.DataInizioVal as String != "9999-12-31")),
	("ALIA_DataFine_CIG__c" : contractSAP.DataFineVal as Date {format: "yyyy-MM-dd"} as String {format: "yyyyMMdd"}) if ((!isEmpty(contractSAP.DataFineVal)) and (contractSAP.DataFineVal as String != "9999-12-31")),
	"ALIA_SDI_IPA__c" : contractSAP.CodiceUnivoco
}

---

if ((typeOf(payload) as String) == "Array") (
	if (sizeOf(payload) == 1) transformSdiIpaCigCup(payload[0])
	else [
		transformSdiIpaCigCup(payload[0]),
		transformSdiIpaCigCup(payload[1])
	]
) else transformSdiIpaCigCup(payload)]]></ee:set-payload>

			</ee:message>
					<ee:variables >
					</ee:variables>
		
</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="689e3f85-ddaf-44c2-bdf1-edd699a08ebd" message="sdiIlpaCigCup successfully created - #[vars.sdiIlpaCigCupRequest]"/>
			</when>
			<otherwise >
				<logger level="INFO" doc:name="Logger" doc:id="eb1111b1-90af-4efd-8c0b-1571fddfcc5c" message='#[%dw 2.0&#10;output text/plain&#10;---&#10;"Updating sdiIpaCigCup using payload: " ++ write(vars.sdiIlpaCigCupRequest, "application/json")]'/>
				<s4hana:update-entity doc:name="Update entity" doc:id="1d1bc94f-3c56-4477-9c32-8c4b454c2ae7" config-ref="SAP_S_4HANA_Config" service="ZER_CIGCUP_CODUNI_SRV" entityType="ZContrContrSet">
					<s4hana:entity ><![CDATA[#[vars.sdiIlpaCigCupRequest]]]></s4hana:entity>
				</s4hana:update-entity>
			<ee:transform doc:name="Update SdiIlpaCigCup - Response Transformation" doc:id="d94f703f-7cb4-4773-9089-e522e2979b99" >
			<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json

fun transformSdiIpaCigCup(contractSAP) = {
	"ALIA_OLDKEY__c" : contractSAP.ContoContrattuale,
	"ALIA_CUP__c" : contractSAP.Cup,
	"ALIA_CIG__c" : contractSAP.Cig,
	("ALIA_DataInizio_CIG__c" : contractSAP.DataInizioVal as Date {format: "yyyy-MM-dd"} as String {format: "yyyyMMdd"}) if ((!isEmpty(contractSAP.DataInizioVal)) and (contractSAP.DataInizioVal as String != "9999-12-31")),
	("ALIA_DataFine_CIG__c" : contractSAP.DataFineVal as Date {format: "yyyy-MM-dd"} as String {format: "yyyyMMdd"}) if ((!isEmpty(contractSAP.DataFineVal)) and (contractSAP.DataFineVal as String != "9999-12-31")),
	"ALIA_SDI_IPA__c" : contractSAP.CodiceUnivoco
}

---

if ((typeOf(payload) as String) == "Array") (
	if (sizeOf(payload) == 1) transformSdiIpaCigCup(payload[0])
	else [
		transformSdiIpaCigCup(payload[0]),
		transformSdiIpaCigCup(payload[1])
	]
) else transformSdiIpaCigCup(payload)]]></ee:set-payload>

			</ee:message>
					<ee:variables >
					</ee:variables>
		
</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="1976ed5b-a79d-4093-b6a9-e317705eb989" message="sdiIlpaCigCup successfully updated - #[vars.sdiIlpaCigCupRequest]"/>
			</otherwise>
		</choice>
		<error-handler >
			<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="971dc6a0-844e-4340-b129-2ed39a81a71b" >
				<logger level="ERROR" doc:name="Logger" doc:id="679470b3-6d39-4cf5-9f24-1ddca0cba22b" message="Error creating Contract"/>
				<ee:transform doc:name="Transform Message" doc:id="b87c7a0b-3580-4c10-8603-1ddee132ca04" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json skipNullOn="everywhere"
---
{
	"error": {
		"message": error.errorMessage,
		"description": error.description,
		"detailedDescription": error.detailedDescription,
		"errorType": {
			"identifier": error.errorType.identifier,
			"namespace": error.errorType.namespace	
		}
	}
}
]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</on-error-propagate>
		</error-handler>
	</flow>
	</mule>
