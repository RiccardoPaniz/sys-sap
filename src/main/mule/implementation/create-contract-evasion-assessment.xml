<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:s4hana="http://www.mulesoft.org/schema/mule/s4hana"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/s4hana http://www.mulesoft.org/schema/mule/s4hana/current/mule-s4hana.xsd">
	
	<flow name="create-contract-evasion-assessment-implFlow" doc:id="cb98a60a-a89a-44a3-917e-cc3dcfca6d84" >
		<ee:transform doc:name="Create Contract Evasion Assessment - Request Transformation" doc:id="116b8ece-7ff2-46dd-b088-87ecabd6c4da" >
			<ee:message >
				<ee:set-payload resource="dataweave/create-contract-evasion-assessment-request-transformation.dwl" />
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="4d6e16d0-51ce-499a-89fd-8454e694f75a" message='#[%dw 2.0&#10;output text/plain&#10;---&#10;"Creating Contract Evasion Assessment using payload: " ++ write(payload, "application/json")]' />
		<s4hana:create-entity doc:name="Create Contract Evasion Assessment" doc:id="7721c52b-d887-4ed6-bef4-8863fe3d15da" responseTimeout="${sap.connection.response-timeout}" responseTimeoutUnit="SECONDS" config-ref="SAP_S_4HANA_Config" service="ZERP_ISU_EVER_ACC_SRV" entityType="ZISURF_EVER_ACCSet">
		    <reconnect frequency="${sap.connection.reconnection.frequency}" count="${sap.connection.reconnection.attempts}"/>
			<s4hana:entity ><![CDATA[#[%dw 2.0
output application/java
---
payload]]]></s4hana:entity>
		</s4hana:create-entity>
		<ee:transform doc:name="Create Contract Evasion Assessment - Response Transformation" doc:id="e7f4d73a-ed22-4bb4-94f8-b281126b16a7">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	"ALIA_VREFER__c" : payload.Vertrag,
	("ALIA_Event_Date_Ev__c" : payload.Dataccert as Date {format: "yyyy-MM-dd"} as String {format: "yyyyMMdd"}) if ((!isEmpty(payload.Dataccert)) and (payload.Dataccert as String != "9999-12-31")),
	"ALIA_Event_Type__c" : payload.Tipoevento,
	"ALIA_Channel__c" : payload.Canaleacq,
	"ALIA_Pratica__c" : payload.Codpratica,
	("ALIA_EINZDAT__c" : payload.Datinieff as Date {format: "yyyy-MM-dd"} as String {format: "yyyyMMdd"}) if ((!isEmpty(payload.Datinieff)) and (payload.Datinieff as String != "9999-12-31")),
	("ALIA_AUSZDAT__c" : payload.Datfineff as Date {format: "yyyy-MM-dd"} as String {format: "yyyyMMdd"}) if ((!isEmpty(payload.Datfineff)) and (payload.Datfineff as String != "9999-12-31"))
}
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="bc96f0c4-fbb8-4a9e-8c22-1cef65cc4b76" message="Contract evasion assessment successfully created - #[payload]"/>
		<error-handler >
			<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="706f77fc-779d-46dd-bd52-106b5c30ad1a" >
				<logger level="ERROR" doc:name="Logger" doc:id="3d101ca0-1c12-44c0-a053-04429e0e363c" message="Error creating Contract Evasion Assessment"/>
				<ee:transform doc:name="Error Transform Message" doc:id="7b6c34ba-96dc-454c-bcb3-f11a71b3a5c0" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json skipNullOn="everywhere"
---
{
	"error": {
		"message": error.errorMessage,
		"description": error.description,
		"detailedDescription": error.detailedDescription,
		"errorType": {
			"identifier": error.errorType.identifier,
			"namespace": error.errorType.namespace	
		}
	}
}
]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</on-error-propagate>
		</error-handler>
	</flow>	
	
	</mule>
