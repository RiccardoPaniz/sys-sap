<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:batch="http://www.mulesoft.org/schema/mule/batch" xmlns:s4hana="http://www.mulesoft.org/schema/mule/s4hana"
	xmlns:salesforce-composite="http://www.mulesoft.org/schema/mule/salesforce-composite"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/salesforce-composite http://www.mulesoft.org/schema/mule/salesforce-composite/current/mule-salesforce-composite.xsd
http://www.mulesoft.org/schema/mule/s4hana http://www.mulesoft.org/schema/mule/s4hana/current/mule-s4hana.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd">
	<flow name="get-premises-for-address-impl-flow" doc:id="53cea037-e49e-4882-bcb9-c4b40dfbaa7d" >
		<choice doc:name="Choice" doc:id="8e6fdb9c-54ce-41d1-92ba-0f625a0c345d" >
			<when expression="#[sizeOf(payload.connObjIdList) == 0]">
				<logger level="ERROR" doc:name="Logger" doc:id="b1bf3aca-bd99-441a-b31c-7db4b0db96a9" message="No mandatory list of connectionObjectId provided"/>
				<raise-error doc:name="Bad request - Missing parameter" doc:id="b5170884-103c-4cd1-a4d7-6495bdc605e2" description="BAD REQUEST" type="VALIDATION:MISSING_PARAMETER"/>
			</when>
			<otherwise >
				<ee:transform doc:name="Payload splitted" doc:id="98d3161e-e801-4839-b225-0298bb76b07e">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
import * from dw::core::Arrays
output application/json

fun sliceVettore(vettore, sizeSlice) = 
	do {
		var sizeV = sizeOf(vettore default [])	
		var step = round(sizeV/sizeSlice + 0.5)
		var stepTemp = (1 to step) default []
		
	---
	(stepTemp map ((item, index) ->
   		slice(vettore, index*sizeSlice, (index+1)*sizeSlice)
 	 )) filter ((item, index) -> !isEmpty(item))
	}
	
---

sliceVettore(payload.connObjIdList, 100) map ((item, index) -> {
    "connObjIdList": item
})
]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<parallel-foreach doc:name="Parallel For Each" doc:id="25856b83-67bd-4f87-93d7-32cf2b92de21" collection="#[payload]">
					<ee:transform doc:name="Get Premises For Address Request Transformation" doc:id="b0dd19f0-0237-41e2-a69e-23e8de677199">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output text/plain

var foglio = if (isEmpty(vars.queryParameters.foglio)) "" else "zfoglio eq '" ++ vars.queryParameters.foglio ++ "'"
var particella = if (isEmpty(vars.queryParameters.particella)) "" else "zpart eq '" ++ vars.queryParameters.particella ++ "'"
var subalterno = if (isEmpty(vars.queryParameters.subalterno)) "" else "zsubal eq '" ++ vars.queryParameters.subalterno ++ "'"
var connectionObjects = "(" ++ (((payload.connObjIdList map ( connObjIdList , indexOfConnObjIdList ) -> "haus eq '" ++ connObjIdList ++ "'") joinBy  " or ") as String) ++ ")"

---

foglio ++ (if (foglio != "" and (particella != "" or subalterno != "" or connectionObjects != "")) " and " else "") ++ particella ++ (if (particella != "" and (subalterno != "" or connectionObjects != "")) " and " else "") ++ subalterno ++ (if (subalterno != "" and connectionObjects != "") " and " else "") ++ connectionObjects 

]]></ee:set-payload>
			</ee:message>
		</ee:transform>
					<logger level="INFO" doc:name="Logger" doc:id="ac7369ee-013a-41cc-a58d-dc5a10641c52" message='#["Premises for address by filter: " ++ payload]' />
					<s4hana:query doc:name="Get Premises For Address" doc:id="97c1a250-ef34-4b98-83c7-3897d660c760" responseTimeout="${sap.connection.response-timeout}" responseTimeoutUnit="SECONDS" config-ref="SAP_S_4HANA_Config" service="ZCDS_PREMCATT_CDS" filter="#[payload]" entityType="ZCDS_PREMCATT">
					<reconnect frequency="${sap.connection.reconnection.frequency}" count="${sap.connection.reconnection.attempts}" />
				</s4hana:query>
					<choice doc:name="Choice" doc:id="3c77b2f1-35e7-4963-b350-5cd6b172836d">
					<when expression="#[sizeOf(payload) == 0]">
							<set-payload value="#[[]]" doc:name="Set Payload" doc:id="3d9da25d-ab47-4b86-8519-ba892bf1a5ff" />
							<logger level="INFO" doc:name="Logger" doc:id="f6b1151b-6419-46ff-9527-79717bdc6c20" message="nessun premises for address trovato"/>
					</when>
					<otherwise>
							<ee:transform doc:name="Get Premises For Address Response Transformation" doc:id="54417112-f01f-43e7-82ab-115772d409ba">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload map ( item , index ) -> {
	connObjId: item.haus,
	premiseId: item.vstelle,
	foglio: item.zfoglio,
	particella: item.zpart,
	subalterno: item.zsubal,
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
							<set-variable value="#[payload]" doc:name="premisesForAddress" doc:id="78489946-2eff-45a0-a6bc-3640fe948258" variableName="premisesForAddress" />
							<ee:transform doc:name="Get Installations from PremiseId List" doc:id="25a018cf-2d7c-4176-b4ed-3294d888ddcf">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/java
---
((payload.premiseId  distinctBy $) map ((item, index) -> "PremiseID eq '" ++ item ++ "'")) joinBy(" or ")]]></ee:set-payload>
					</ee:message>
				</ee:transform>
							<s4hana:query doc:name="Get Installations" doc:id="ed328113-8092-4a90-bfb6-36a38e1e70b2" responseTimeout="${sap.connection.response-timeout}" responseTimeoutUnit="SECONDS" config-ref="SAP_S_4HANA_Config" service="ZERP_ISU_UMC_SRV" filter="#[payload]" entityType="Installations">
					<reconnect frequency="${sap.connection.reconnection.frequency}" count="${sap.connection.reconnection.attempts}" />
				</s4hana:query>
							<ee:transform doc:name="Save installations" doc:id="cb6c9d15-e726-4ea6-8b28-da619242559c">
					<ee:variables>
						<ee:set-variable variableName="installations"><![CDATA[%dw 2.0
output application/json
---
payload map ( item , index ) -> {
	aklasse: item.Aklasse,
	installationid: item.InstallationID,
	tariftyp: item.Tariftyp,
	ableinh: item.Ableinh,
	anlart: item.Anlart,
	divisionid: item.DivisionID,
	begru: item.Begru,
	premiseid: item.PremiseID,
	zzcodragg: item.Zzcodragg,
	zzcodraggh: item.Zzcodraggh
}]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
							<set-payload value="#[vars.premisesForAddress]" doc:name="Set Payload" doc:id="e50c63d9-d4e2-4d93-b5e1-c7351524fba9" />
							<ee:transform doc:name="Transform Message" doc:id="be015caa-88ab-48ff-8742-46a8c01300f2">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload map ( item , index ) -> {
	connObjId: item.connObjId,
	premiseId: item.premiseId,
	foglio: item.foglio,
	particella: item.particella,
	subalterno: item.subalterno,
	installationList: vars.installations filter ($.premiseid == item.premiseId)
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
					</otherwise>
				</choice>
				</parallel-foreach>
				<set-payload value="#[%dw 2.0&#10;output appliaction/json&#10;---&#10;flatten(payload.typedValue)]" doc:name="Set Payload" doc:id="a04f6ec4-c628-4cca-b8cb-fe2b50894826" />
				<logger level="INFO" doc:name="Logger" doc:id="aa4d916f-4d67-4ad4-973f-f1393ad50421" message="Premises For Address got: #[payload]" />
			</otherwise>
		</choice>
		<error-handler >
<!-- [STUDIO:"On Error Continue"]			<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="33389bda-4a6a-41cb-8f40-97679943e6ae" type="S4HANA:NO_RECORD_FOUND" when='error.description contains "nessun premises for address trovato"'>
				<logger level="WARN" doc:name="Logger" doc:id="f8e6dc12-b56e-44bc-96ac-6ae5cb6784bd" message="Premises for address not found"/>
				<set-payload value="#[%dw 2.0&#10;output application/json&#10;&#45;&#45;-&#10;[&#93;&#93;" doc:name="Empty array" doc:id="9cec5b2b-bcb5-4ab5-bc14-f1575ebf06ba" />
			</on-error-continue> [STUDIO] -->
			<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="b0d17930-c22e-4693-83ac-225c5726b9fb" type="ANY">
				<logger level="ERROR" doc:name="Logger" doc:id="a6f52560-d496-49fe-9416-0083c50e164c" message="Error retrieving Premises for address"/>
				<ee:transform doc:name="Transform Message" doc:id="622ca970-ed44-4609-99c6-dddc9600c068" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json skipNullOn="everywhere"
---
{
	"error": {
		"message": error.errorMessage,
		"description": error.description,
		"detailedDescription": error.detailedDescription,
		"errorType": {
			"identifier": error.errorType.identifier,
			"namespace": error.errorType.namespace	
		}
	}
}
]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</on-error-propagate>
		</error-handler>
	</flow>
</mule>
